name: trivy_checkov_wizcli
on:
  workflow_dispatch:
  pull_request:
    types:
      - synchronize
      - opened

defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:
  get-tf-directories:
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.set_tf_dirs.outputs.tf_dirs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Terraform directories
        id: set_tf_dirs
        run: |
          TF_DIRS=$(find . -type f -name "*.tf" -exec dirname {} \; | sort | uniq | jq -R -s -c 'split("\n")[:-1]')
          echo "tf_dirs=${TF_DIRS}" >> "${GITHUB_OUTPUT}"


  tf-directory-jobs:
    needs: get-tf-directories
    runs-on: ubuntu-latest
    name: ${{ matrix.tf-dir }}
    strategy:
      matrix:
        tf-dir: ${{ fromJson(needs.get-tf-directories.outputs.tf_dirs) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install checkov
        run: |
          pip3 install checkov

      - name: 🔍 Run Trivy scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          scan-ref: ${{ matrix.tf-dir }}
          format: table
          scanners: misconfig

      - name: 🔍 Run Checkov scanner
        env:
          DIRECTORY: ${{ matrix.tf-dir }}
        run: |
          checkov --directory "${DIRECTORY}" --quiet --soft-fail --download-external-modules True --external-modules-download-path /tmp/

      - name: Download and Install Terraform
        working-directory: /tmp
        run: |
          wget -q https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip
          unzip -q terraform_1.9.8_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Download Wiz CLI
        run: |
          sudo curl -Lso /usr/local/bin/wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64
          sudo chmod +x /usr/local/bin/wizcli

      - name: Authenticate to Wiz
        run: wizcli auth --id "${WIZ_CLIENT_ID}" --secret "${WIZ_CLIENT_SECRET}"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: 🔍 Run WizCLI directory scan
        working-directory: ${{ matrix.tf-dir }}
        run: |
          wizcli iac scan --path . --name "${GITHUB_REPOSITORY}" --tag git-repository="${GITHUB_REPOSITORY}",git-repo-url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}",git-ref-name="${GITHUB_REF_NAME}",triggered-by="${GITHUB_TRIGGERING_ACTOR}",git-sha="${GITHUB_WORKFLOW_SHA}",git-commit-url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_WORKFLOW_SHA}",gh-workflow="${GITHUB_WORKFLOW}",gh-run-url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

      - name: 🔍 Run WizCLI TF plan scan
        working-directory: ${{ matrix.tf-dir }}
        run: |
          terraform init
          terraform plan -refresh=false -out plan.tfplan && terraform show -json plan.tfplan | jq -er . > plan.tfplanjson
          wizcli iac scan --path plan.tfplanjson --name "${GITHUB_REPOSITORY}" --tag git-repository="${GITHUB_REPOSITORY}",git-repo-url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}",git-ref-name="${GITHUB_REF_NAME}",triggered-by="${GITHUB_TRIGGERING_ACTOR}",git-sha="${GITHUB_WORKFLOW_SHA}",git-commit-url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_WORKFLOW_SHA}",gh-workflow="${GITHUB_WORKFLOW}",gh-run-url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
